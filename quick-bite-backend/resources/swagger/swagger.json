{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Quick Bite API"
    },
    "basePath": "/api",
    "paths": {
        "/currencies": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Gets all currencies",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "symbol": {
                                                "type": "string"
                                            },
                                            "rate": {
                                                "type": "number",
                                                "format": "double"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Currency"
                ],
                "summary": "Add a new currency",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Currency object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Currency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/currencies/{currency}": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Finds currency by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "currency",
                        "description": "ID of the currency that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "symbol": {
                                    "type": "string"
                                },
                                "rate": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "currency not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Currency"
                ],
                "summary": "Updates an existing currency",
                "parameters": [
                    {
                        "in": "path",
                        "name": "currency",
                        "description": "ID of the currency that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Currency object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Currency"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "currency not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Currency"
                ],
                "summary": "Deletes an existing currency",
                "parameters": [
                    {
                        "in": "path",
                        "name": "currency",
                        "description": "ID of the currency that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "currency not found"
                    }
                }
            }
        },
        "/faqs": {
            "get": {
                "tags": [
                    "FAQ"
                ],
                "summary": "Gets all FAQs",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "string"
                                            },
                                            "question": {
                                                "type": "string"
                                            },
                                            "answer": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FAQ"
                ],
                "summary": "Add a new FAQ",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "FAQ object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Faq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/faqs/{faq}": {
            "get": {
                "tags": [
                    "FAQ"
                ],
                "summary": "Finds FAQ by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "faq",
                        "description": "ID of the FAQ that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "string"
                                },
                                "question": {
                                    "type": "string"
                                },
                                "answer": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "currency not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "FAQ"
                ],
                "summary": "Updates an existing FAQ",
                "parameters": [
                    {
                        "in": "path",
                        "name": "faq",
                        "description": "ID of the FAQ that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "FAQ object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Currency"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "currency not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FAQ"
                ],
                "summary": "Deletes an existing FAQ",
                "parameters": [
                    {
                        "in": "path",
                        "name": "faq",
                        "description": "ID of the FAQ that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "FAQ not found"
                    }
                }
            }
        },
        "/images": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Gets all images",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "path": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Image"
                ],
                "summary": "Adds a new image",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Image object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/images/{image}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Finds currency by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "image",
                        "description": "ID of the image that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "path": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "image not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Image"
                ],
                "summary": "Updates an existing Image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "image",
                        "description": "ID of the image that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Image object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Image"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "image not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Image"
                ],
                "summary": "Deletes an existing image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "image",
                        "description": "ID of the image that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "image not found"
                    }
                }
            }
        },
        "/items": {
            "get": {
                "tags": [
                    "Item"
                ],
                "summary": "Gets all items",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "details": {
                                                "type": "string"
                                            },
                                            "type": {
                                                "type": "string",
                                                "enum": [
                                                    "plate",
                                                    "sandwich",
                                                    "dessert",
                                                    "drink"
                                                ]
                                            },
                                            "base_price": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "sale": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "average_rating": {
                                                "type": "number",
                                                "format": "double",
                                                "minimum": 0,
                                                "maximum": 5
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "format": "integer"
                                                        },
                                                        "path": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "is_trending": {
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Item"
                ],
                "summary": "Add a new item",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Item object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/items/{item}": {
            "get": {
                "tags": [
                    "Item"
                ],
                "summary": "Finds item by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "item",
                        "description": "ID of the item that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "details": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "plate",
                                        "sandwich",
                                        "dessert",
                                        "drink"
                                    ]
                                },
                                "base_price": {
                                    "type": "number",
                                    "format": "double"
                                },
                                "sale": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "average_rating": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "maximum": 5
                                },
                                "images": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "path": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "is_trending": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Item"
                ],
                "summary": "Updates an existing item",
                "parameters": [
                    {
                        "in": "path",
                        "name": "item",
                        "description": "ID of the item that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Item object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "item not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Item"
                ],
                "summary": "Deletes an existing item",
                "parameters": [
                    {
                        "in": "path",
                        "name": "item",
                        "description": "ID of the item that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "item not found"
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Gets all menus",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "format": "integer"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "details": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "plate",
                                                                "sandwich",
                                                                "dessert",
                                                                "drink"
                                                            ]
                                                        },
                                                        "base_price": {
                                                            "type": "number",
                                                            "format": "double"
                                                        },
                                                        "sale": {
                                                            "type": "number",
                                                            "format": "integer"
                                                        },
                                                        "average_rating": {
                                                            "type": "number",
                                                            "format": "double",
                                                            "minimum": 0,
                                                            "maximum": 5
                                                        },
                                                        "images": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "number",
                                                                        "format": "integer"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "is_trending": {
                                                            "type": "boolean"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Menu"
                ],
                "summary": "Add a new menu",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Menu object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Menu"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/menus/{menu}": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Finds menu by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "menu",
                        "description": "ID of the menu that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "details": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "plate",
                                        "sandwich",
                                        "dessert",
                                        "drink"
                                    ]
                                },
                                "base_price": {
                                    "type": "number",
                                    "format": "double"
                                },
                                "sale": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "average_rating": {
                                    "type": "number",
                                    "format": "double",
                                    "minimum": 0,
                                    "maximum": 5
                                },
                                "images": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "path": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "is_trending": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "menu not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Menu"
                ],
                "summary": "Updates an existing menu",
                "parameters": [
                    {
                        "in": "path",
                        "name": "menu",
                        "description": "ID of the menu that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Menu object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Menu"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "menu not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Menu"
                ],
                "summary": "Deletes an existing menu",
                "parameters": [
                    {
                        "in": "path",
                        "name": "menu",
                        "description": "ID of the menu that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "menu not found"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Gets all orders",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "status": {
                                                "type": "string",
                                                "enum": [
                                                    "pending",
                                                    "delivered"
                                                ]
                                            },
                                            "item": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "format": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "plate",
                                                            "sandwich",
                                                            "dessert",
                                                            "drink"
                                                        ]
                                                    },
                                                    "base_price": {
                                                        "type": "number",
                                                        "format": "double"
                                                    },
                                                    "sale": {
                                                        "type": "number",
                                                        "format": "integer"
                                                    },
                                                    "average_rating": {
                                                        "type": "number",
                                                        "format": "double",
                                                        "minimum": 0,
                                                        "maximum": 5
                                                    },
                                                    "images": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "number",
                                                                    "format": "integer"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "is_trending": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            "user": {
                                                "type": "object",
                                                "properties": {
                                                    "first_name": {
                                                        "type": "string"
                                                    },
                                                    "last_name": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "password": {
                                                        "type": "string"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "enum": [
                                                            "client",
                                                            "admin",
                                                            "super admin"
                                                        ]
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Add a new order",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Order object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/{order}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Finds order by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "order",
                        "description": "ID of the order that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "pending",
                                        "delivered"
                                    ]
                                },
                                "item": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "format": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "plate",
                                                "sandwich",
                                                "dessert",
                                                "drink"
                                            ]
                                        },
                                        "base_price": {
                                            "type": "number",
                                            "format": "double"
                                        },
                                        "sale": {
                                            "type": "number",
                                            "format": "integer"
                                        },
                                        "average_rating": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": 0,
                                            "maximum": 5
                                        },
                                        "images": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "format": "integer"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "is_trending": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string",
                                            "enum": [
                                                "client",
                                                "admin",
                                                "super admin"
                                            ]
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    }
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "order not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Updates an existing order",
                "parameters": [
                    {
                        "in": "path",
                        "name": "order",
                        "description": "ID of the order that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Order object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "order not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Deletes an existing order",
                "parameters": [
                    {
                        "in": "path",
                        "name": "order",
                        "description": "ID of the order that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "order not found"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Gets all users",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "first_name": {
                                                "type": "string"
                                            },
                                            "last_name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            },
                                            "role": {
                                                "type": "string",
                                                "enum": [
                                                    "client",
                                                    "admin",
                                                    "super admin"
                                                ]
                                            },
                                            "item_feedbacks": {
                                                "type": "object",
                                                "properties": {
                                                    "count": {
                                                        "type": "number",
                                                        "format": "integer"
                                                    },
                                                    "data": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "number",
                                                                    "format": "integer"
                                                                },
                                                                "rating": {
                                                                    "type": "number",
                                                                    "format": "integer",
                                                                    "enum": [
                                                                        0,
                                                                        1,
                                                                        2,
                                                                        3,
                                                                        4,
                                                                        5
                                                                    ]
                                                                },
                                                                "details": {
                                                                    "type": "string"
                                                                },
                                                                "item": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "number",
                                                                            "format": "integer"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "details": {
                                                                            "type": "string"
                                                                        },
                                                                        "type": {
                                                                            "type": "string",
                                                                            "enum": [
                                                                                "plate",
                                                                                "sandwich",
                                                                                "dessert",
                                                                                "drink"
                                                                            ]
                                                                        },
                                                                        "base_price": {
                                                                            "type": "number",
                                                                            "format": "double"
                                                                        },
                                                                        "sale": {
                                                                            "type": "number",
                                                                            "format": "integer"
                                                                        },
                                                                        "average_rating": {
                                                                            "type": "number",
                                                                            "format": "double",
                                                                            "minimum": 0,
                                                                            "maximum": 5
                                                                        },
                                                                        "images": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "number",
                                                                                        "format": "integer"
                                                                                    },
                                                                                    "path": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "is_trending": {
                                                                            "type": "boolean"
                                                                        }
                                                                    }
                                                                },
                                                                "created_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                },
                                                                "updated_at": {
                                                                    "type": "string",
                                                                    "format": "date-time"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a new user",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/users/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Finds user by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user",
                        "description": "ID of the user that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "first_name": {
                                    "type": "string"
                                },
                                "last_name": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string",
                                    "enum": [
                                        "client",
                                        "admin",
                                        "super admin"
                                    ]
                                },
                                "item_feedbacks": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "number",
                                            "format": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "format": "integer"
                                                    },
                                                    "rating": {
                                                        "type": "number",
                                                        "format": "integer",
                                                        "enum": [
                                                            0,
                                                            1,
                                                            2,
                                                            3,
                                                            4,
                                                            5
                                                        ]
                                                    },
                                                    "details": {
                                                        "type": "string"
                                                    },
                                                    "item": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "number",
                                                                "format": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "details": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "plate",
                                                                    "sandwich",
                                                                    "dessert",
                                                                    "drink"
                                                                ]
                                                            },
                                                            "base_price": {
                                                                "type": "number",
                                                                "format": "double"
                                                            },
                                                            "sale": {
                                                                "type": "number",
                                                                "format": "integer"
                                                            },
                                                            "average_rating": {
                                                                "type": "number",
                                                                "format": "double",
                                                                "minimum": 0,
                                                                "maximum": 5
                                                            },
                                                            "images": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "number",
                                                                            "format": "integer"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "is_trending": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updates an existing user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user",
                        "description": "ID of the user that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Deletes an existing user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user",
                        "description": "ID of the user that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "user not found"
                    }
                }
            }
        },
        "/item_feedbacks": {
            "get": {
                "tags": [
                    "Item feedback"
                ],
                "summary": "Gets all item_feedbacks",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "format": "integer"
                                                        },
                                                        "rating": {
                                                            "type": "number",
                                                            "format": "integer",
                                                            "enum": [
                                                                0,
                                                                1,
                                                                2,
                                                                3,
                                                                4,
                                                                5
                                                            ]
                                                        },
                                                        "details": {
                                                            "type": "string"
                                                        },
                                                        "user": {
                                                            "type": "object",
                                                            "properties": {
                                                                "first_name": {
                                                                    "type": "string"
                                                                },
                                                                "last_name": {
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "password": {
                                                                    "type": "string"
                                                                },
                                                                "role": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "client",
                                                                        "admin",
                                                                        "super admin"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "item": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "number",
                                                                    "format": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "details": {
                                                                    "type": "string"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "plate",
                                                                        "sandwich",
                                                                        "dessert",
                                                                        "drink"
                                                                    ]
                                                                },
                                                                "base_price": {
                                                                    "type": "number",
                                                                    "format": "double"
                                                                },
                                                                "sale": {
                                                                    "type": "number",
                                                                    "format": "integer"
                                                                },
                                                                "average_rating": {
                                                                    "type": "number",
                                                                    "format": "double",
                                                                    "minimum": 0,
                                                                    "maximum": 5
                                                                },
                                                                "images": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "number",
                                                                                "format": "integer"
                                                                            },
                                                                            "path": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "is_trending": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Item feedback"
                ],
                "summary": "Add a new item feedback",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Item feedback object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ItemFeedback"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/item_feedbacks/{item_feedback}": {
            "get": {
                "tags": [
                    "Item feedback"
                ],
                "summary": "Finds item feedback by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "item_feedback",
                        "description": "ID of the item feedback that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "integer",
                                    "enum": [
                                        0,
                                        1,
                                        2,
                                        3,
                                        4,
                                        5
                                    ]
                                },
                                "details": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string",
                                            "enum": [
                                                "client",
                                                "admin",
                                                "super admin"
                                            ]
                                        }
                                    }
                                },
                                "item": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "format": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "details": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "plate",
                                                "sandwich",
                                                "dessert",
                                                "drink"
                                            ]
                                        },
                                        "base_price": {
                                            "type": "number",
                                            "format": "double"
                                        },
                                        "sale": {
                                            "type": "number",
                                            "format": "integer"
                                        },
                                        "average_rating": {
                                            "type": "number",
                                            "format": "double",
                                            "minimum": 0,
                                            "maximum": 5
                                        },
                                        "images": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "format": "integer"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "is_trending": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "item feedback not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Item feedback"
                ],
                "summary": "Updates an existing item feedback",
                "parameters": [
                    {
                        "in": "path",
                        "name": "item_feedback",
                        "description": "ID of the item feedback that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Item feedback object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ItemFeedback"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "item feedback not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Item feedback"
                ],
                "summary": "Deletes an existing item feedback",
                "parameters": [
                    {
                        "in": "path",
                        "name": "item_feedback",
                        "description": "ID of the item feedback that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "item feedback not found"
                    }
                }
            }
        },
        "/visit_feedbacks": {
            "get": {
                "tags": [
                    "Visit feedback"
                ],
                "summary": "Gets all visit feedbacks",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "count": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "count": {
                                                "type": "number",
                                                "format": "integer"
                                            },
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "number",
                                                            "format": "integer"
                                                        },
                                                        "rating": {
                                                            "type": "number",
                                                            "format": "integer",
                                                            "enum": [
                                                                0,
                                                                1,
                                                                2,
                                                                3,
                                                                4,
                                                                5
                                                            ]
                                                        },
                                                        "details": {
                                                            "type": "string"
                                                        },
                                                        "user": {
                                                            "type": "object",
                                                            "properties": {
                                                                "first_name": {
                                                                    "type": "string"
                                                                },
                                                                "last_name": {
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "password": {
                                                                    "type": "string"
                                                                },
                                                                "role": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "client",
                                                                        "admin",
                                                                        "super admin"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Visit feedback"
                ],
                "summary": "Add a new visit feedback",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "VisitFeedback object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VisitFeedback"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/visit_feedbacks/{visit_feedback}": {
            "get": {
                "tags": [
                    "Visit feedback"
                ],
                "summary": "Finds visit feedback by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "visit_feedback",
                        "description": "ID of the visit feedback that needs to be fetched",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "format": "integer"
                                },
                                "rating": {
                                    "type": "number",
                                    "format": "integer",
                                    "enum": [
                                        0,
                                        1,
                                        2,
                                        3,
                                        4,
                                        5
                                    ]
                                },
                                "details": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "first_name": {
                                            "type": "string"
                                        },
                                        "last_name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string",
                                            "enum": [
                                                "client",
                                                "admin",
                                                "super admin"
                                            ]
                                        }
                                    }
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "visit feedback not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Visit feedback"
                ],
                "summary": "Updates an existing visit feedback",
                "parameters": [
                    {
                        "in": "path",
                        "name": "visit_feedback",
                        "description": "ID of the visit feedback that needs to be updated",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "VisitFeedback object that needs to be added",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VisitFeedback"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "visit feedback not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Visit feedback"
                ],
                "summary": "Deletes an existing visit feedback",
                "parameters": [
                    {
                        "in": "path",
                        "name": "visit_feedback",
                        "description": "ID of the visit feedback that needs to be deleted",
                        "required": true,
                        "type": "number",
                        "format": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "successful operation"
                    },
                    "404": {
                        "description": "visit feedback not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "Currency": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "Faq": {
            "properties": {
                "question": {
                    "type": "string"
                },
                "answer": {
                    "type": "string"
                }
            }
        },
        "Image": {
            "properties": {
                "path": {
                    "type": "string"
                },
                "item_id": {
                    "type": "number",
                    "format": "integer"
                }
            }
        },
        "ItemFeedback": {
            "properties": {
                "user_id": {
                    "type": "number",
                    "format": "integer"
                },
                "rating": {
                    "type": "number",
                    "format": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "details": {
                    "type": "string"
                },
                "item_id": {
                    "type": "number",
                    "format": "integer"
                }
            }
        },
        "Item": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "plate",
                        "sandwich",
                        "dessert",
                        "drink"
                    ]
                },
                "base_price": {
                    "type": "number",
                    "format": "double"
                },
                "sale": {
                    "type": "number",
                    "format": "integer"
                },
                "average_rating": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "maximum": 5
                },
                "menu_id": {
                    "type": "number",
                    "format": "integer"
                },
                "is_trending": {
                    "type": "boolean"
                }
            }
        },
        "Menu": {
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Order": {
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "pending",
                        "delivered"
                    ]
                },
                "item_id": {
                    "type": "number",
                    "format": "integer"
                },
                "user_id": {
                    "type": "number",
                    "format": "integer"
                }
            }
        },
        "User": {
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "client",
                        "admin",
                        "super admin"
                    ]
                }
            }
        },
        "VisitFeedback": {
            "properties": {
                "user_id": {
                    "type": "number",
                    "format": "integer"
                },
                "rating": {
                    "type": "number",
                    "format": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5
                    ]
                },
                "details": {
                    "type": "string"
                }
            }
        }
    }
}
